// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0-devel
// 	protoc        v3.11.4
// source: zwiftpower.proto

package zwiftpower

import (
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	_struct "github.com/golang/protobuf/ptypes/struct"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetEventSprintsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the event
	Zid int32 `protobuf:"varint,1,opt,name=zid,proto3" json:"zid,omitempty"`
}

func (x *GetEventSprintsRequest) Reset() {
	*x = GetEventSprintsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zwiftpower_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventSprintsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventSprintsRequest) ProtoMessage() {}

func (x *GetEventSprintsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zwiftpower_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventSprintsRequest.ProtoReflect.Descriptor instead.
func (*GetEventSprintsRequest) Descriptor() ([]byte, []int) {
	return file_zwiftpower_proto_rawDescGZIP(), []int{0}
}

func (x *GetEventSprintsRequest) GetZid() int32 {
	if x != nil {
		return x.Zid
	}
	return 0
}

type GetEventSprintsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*EventSprints `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetEventSprintsResponse) Reset() {
	*x = GetEventSprintsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zwiftpower_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventSprintsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventSprintsResponse) ProtoMessage() {}

func (x *GetEventSprintsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zwiftpower_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventSprintsResponse.ProtoReflect.Descriptor instead.
func (*GetEventSprintsResponse) Descriptor() ([]byte, []int) {
	return file_zwiftpower_proto_rawDescGZIP(), []int{1}
}

func (x *GetEventSprintsResponse) GetData() []*EventSprints {
	if x != nil {
		return x.Data
	}
	return nil
}

type EventSprints struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DT_RowId      string   `protobuf:"bytes,1,opt,name=DT_RowId,json=DTRowId,proto3" json:"DT_RowId,omitempty"`
	Ftp           string   `protobuf:"bytes,2,opt,name=ftp,proto3" json:"ftp,omitempty"`
	Pt            string   `protobuf:"bytes,3,opt,name=pt,proto3" json:"pt,omitempty"`
	Label         string   `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	Zid           string   `protobuf:"bytes,5,opt,name=zid,proto3" json:"zid,omitempty"`
	Pos           string   `protobuf:"bytes,6,opt,name=pos,proto3" json:"pos,omitempty"`
	PositionInCat string   `protobuf:"bytes,7,opt,name=position_in_cat,json=positionInCat,proto3" json:"position_in_cat,omitempty"`
	Name          string   `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	Zwid          string   `protobuf:"bytes,9,opt,name=zwid,proto3" json:"zwid,omitempty"`
	ResId         string   `protobuf:"bytes,10,opt,name=res_id,json=resId,proto3" json:"res_id,omitempty"`
	Male          int32    `protobuf:"varint,11,opt,name=male,proto3" json:"male,omitempty"`
	Tid           string   `protobuf:"bytes,12,opt,name=tid,proto3" json:"tid,omitempty"`
	Topen         string   `protobuf:"bytes,13,opt,name=topen,proto3" json:"topen,omitempty"`
	Tname         string   `protobuf:"bytes,14,opt,name=tname,proto3" json:"tname,omitempty"`
	Tc            string   `protobuf:"bytes,15,opt,name=tc,proto3" json:"tc,omitempty"`
	Tbc           string   `protobuf:"bytes,16,opt,name=tbc,proto3" json:"tbc,omitempty"`
	Tbd           string   `protobuf:"bytes,17,opt,name=tbd,proto3" json:"tbd,omitempty"`
	Category      string   `protobuf:"bytes,18,opt,name=category,proto3" json:"category,omitempty"`
	Height        *any.Any `protobuf:"bytes,19,opt,name=height,proto3" json:"height,omitempty"`
	Flag          string   `protobuf:"bytes,20,opt,name=flag,proto3" json:"flag,omitempty"`
	Hrm           string   `protobuf:"bytes,21,opt,name=hrm,proto3" json:"hrm,omitempty"`
	Weight        string   `protobuf:"bytes,22,opt,name=weight,proto3" json:"weight,omitempty"`
	PowerType     string   `protobuf:"bytes,23,opt,name=power_type,json=powerType,proto3" json:"power_type,omitempty"`
	DisplayPos    string   `protobuf:"bytes,24,opt,name=display_pos,json=displayPos,proto3" json:"display_pos,omitempty"`
	Age           string   `protobuf:"bytes,25,opt,name=age,proto3" json:"age,omitempty"`
	Zada          int32    `protobuf:"varint,26,opt,name=zada,proto3" json:"zada,omitempty"`
	Note          string   `protobuf:"bytes,27,opt,name=note,proto3" json:"note,omitempty"`
	IsGuess       int32    `protobuf:"varint,28,opt,name=is_guess,json=isGuess,proto3" json:"is_guess,omitempty"`
	Penalty       int32    `protobuf:"varint,29,opt,name=penalty,proto3" json:"penalty,omitempty"`
	Reg           int32    `protobuf:"varint,30,opt,name=reg,proto3" json:"reg,omitempty"`
	Fl            string   `protobuf:"bytes,31,opt,name=fl,proto3" json:"fl,omitempty"`
	S36           string   `protobuf:"bytes,32,opt,name=s36,proto3" json:"s36,omitempty"`
	Msec          *any.Any `protobuf:"bytes,33,opt,name=msec,proto3" json:"msec,omitempty"`
	Watts         *any.Any `protobuf:"bytes,34,opt,name=watts,proto3" json:"watts,omitempty"`
	Wkg           *any.Any `protobuf:"bytes,35,opt,name=wkg,proto3" json:"wkg,omitempty"`
}

func (x *EventSprints) Reset() {
	*x = EventSprints{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zwiftpower_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSprints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSprints) ProtoMessage() {}

func (x *EventSprints) ProtoReflect() protoreflect.Message {
	mi := &file_zwiftpower_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSprints.ProtoReflect.Descriptor instead.
func (*EventSprints) Descriptor() ([]byte, []int) {
	return file_zwiftpower_proto_rawDescGZIP(), []int{2}
}

func (x *EventSprints) GetDT_RowId() string {
	if x != nil {
		return x.DT_RowId
	}
	return ""
}

func (x *EventSprints) GetFtp() string {
	if x != nil {
		return x.Ftp
	}
	return ""
}

func (x *EventSprints) GetPt() string {
	if x != nil {
		return x.Pt
	}
	return ""
}

func (x *EventSprints) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *EventSprints) GetZid() string {
	if x != nil {
		return x.Zid
	}
	return ""
}

func (x *EventSprints) GetPos() string {
	if x != nil {
		return x.Pos
	}
	return ""
}

func (x *EventSprints) GetPositionInCat() string {
	if x != nil {
		return x.PositionInCat
	}
	return ""
}

func (x *EventSprints) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventSprints) GetZwid() string {
	if x != nil {
		return x.Zwid
	}
	return ""
}

func (x *EventSprints) GetResId() string {
	if x != nil {
		return x.ResId
	}
	return ""
}

func (x *EventSprints) GetMale() int32 {
	if x != nil {
		return x.Male
	}
	return 0
}

func (x *EventSprints) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *EventSprints) GetTopen() string {
	if x != nil {
		return x.Topen
	}
	return ""
}

func (x *EventSprints) GetTname() string {
	if x != nil {
		return x.Tname
	}
	return ""
}

func (x *EventSprints) GetTc() string {
	if x != nil {
		return x.Tc
	}
	return ""
}

func (x *EventSprints) GetTbc() string {
	if x != nil {
		return x.Tbc
	}
	return ""
}

func (x *EventSprints) GetTbd() string {
	if x != nil {
		return x.Tbd
	}
	return ""
}

func (x *EventSprints) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *EventSprints) GetHeight() *any.Any {
	if x != nil {
		return x.Height
	}
	return nil
}

func (x *EventSprints) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

func (x *EventSprints) GetHrm() string {
	if x != nil {
		return x.Hrm
	}
	return ""
}

func (x *EventSprints) GetWeight() string {
	if x != nil {
		return x.Weight
	}
	return ""
}

func (x *EventSprints) GetPowerType() string {
	if x != nil {
		return x.PowerType
	}
	return ""
}

func (x *EventSprints) GetDisplayPos() string {
	if x != nil {
		return x.DisplayPos
	}
	return ""
}

func (x *EventSprints) GetAge() string {
	if x != nil {
		return x.Age
	}
	return ""
}

func (x *EventSprints) GetZada() int32 {
	if x != nil {
		return x.Zada
	}
	return 0
}

func (x *EventSprints) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *EventSprints) GetIsGuess() int32 {
	if x != nil {
		return x.IsGuess
	}
	return 0
}

func (x *EventSprints) GetPenalty() int32 {
	if x != nil {
		return x.Penalty
	}
	return 0
}

func (x *EventSprints) GetReg() int32 {
	if x != nil {
		return x.Reg
	}
	return 0
}

func (x *EventSprints) GetFl() string {
	if x != nil {
		return x.Fl
	}
	return ""
}

func (x *EventSprints) GetS36() string {
	if x != nil {
		return x.S36
	}
	return ""
}

func (x *EventSprints) GetMsec() *any.Any {
	if x != nil {
		return x.Msec
	}
	return nil
}

func (x *EventSprints) GetWatts() *any.Any {
	if x != nil {
		return x.Watts
	}
	return nil
}

func (x *EventSprints) GetWkg() *any.Any {
	if x != nil {
		return x.Wkg
	}
	return nil
}

type EventComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Friend int32  `protobuf:"varint,2,opt,name=friend,proto3" json:"friend,omitempty"`
	Ftp    string `protobuf:"bytes,3,opt,name=ftp,proto3" json:"ftp,omitempty"`
	Zwid   int32  `protobuf:"varint,4,opt,name=zwid,proto3" json:"zwid,omitempty"`
	S      string `protobuf:"bytes,5,opt,name=s,proto3" json:"s,omitempty"`
	Pt     string `protobuf:"bytes,6,opt,name=pt,proto3" json:"pt,omitempty"`
	Tid    string `protobuf:"bytes,7,opt,name=tid,proto3" json:"tid,omitempty"`
	Topen  string `protobuf:"bytes,8,opt,name=topen,proto3" json:"topen,omitempty"`
	Tname  string `protobuf:"bytes,9,opt,name=tname,proto3" json:"tname,omitempty"`
	// Team color
	Tc string `protobuf:"bytes,10,opt,name=tc,proto3" json:"tc,omitempty"`
	// Team background color
	Tbc string `protobuf:"bytes,11,opt,name=tbc,proto3" json:"tbc,omitempty"`
	// Team border color
	Tbd  string `protobuf:"bytes,12,opt,name=tbd,proto3" json:"tbd,omitempty"`
	Flag string `protobuf:"bytes,13,opt,name=flag,proto3" json:"flag,omitempty"`
	W    string `protobuf:"bytes,14,opt,name=w,proto3" json:"w,omitempty"`
	Age  int32  `protobuf:"varint,15,opt,name=age,proto3" json:"age,omitempty"`
	// Height in centimeters
	Height     int32  `protobuf:"varint,16,opt,name=height,proto3" json:"height,omitempty"`
	Gender     string `protobuf:"bytes,17,opt,name=gender,proto3" json:"gender,omitempty"`
	Zada       int32  `protobuf:"varint,18,opt,name=zada,proto3" json:"zada,omitempty"`
	Events     string `protobuf:"bytes,19,opt,name=events,proto3" json:"events,omitempty"`
	Div        int32  `protobuf:"varint,20,opt,name=div,proto3" json:"div,omitempty"`
	Divw       int32  `protobuf:"varint,21,opt,name=divw,proto3" json:"divw,omitempty"`
	Rank       string `protobuf:"bytes,22,opt,name=rank,proto3" json:"rank,omitempty"`
	Skill      int32  `protobuf:"varint,23,opt,name=skill,proto3" json:"skill,omitempty"`
	SkillRace  int32  `protobuf:"varint,24,opt,name=skill_race,json=skillRace,proto3" json:"skill_race,omitempty"`
	SkillSeg   int32  `protobuf:"varint,25,opt,name=skill_seg,json=skillSeg,proto3" json:"skill_seg,omitempty"`
	SkillPower int32  `protobuf:"varint,26,opt,name=skill_power,json=skillPower,proto3" json:"skill_power,omitempty"`
	SkillPos   int32  `protobuf:"varint,27,opt,name=skill_pos,json=skillPos,proto3" json:"skill_pos,omitempty"`
	Reg        int32  `protobuf:"varint,28,opt,name=reg,proto3" json:"reg,omitempty"`
	Eff        string `protobuf:"bytes,29,opt,name=eff,proto3" json:"eff,omitempty"`
	Fl         string `protobuf:"bytes,30,opt,name=fl,proto3" json:"fl,omitempty"`
	Id         int32  `protobuf:"varint,31,opt,name=id,proto3" json:"id,omitempty"`
	// HTML comment
	Comment string `protobuf:"bytes,32,opt,name=comment,proto3" json:"comment,omitempty"`
	Pid     string `protobuf:"bytes,33,opt,name=pid,proto3" json:"pid,omitempty"`
	Fid     string `protobuf:"bytes,34,opt,name=fid,proto3" json:"fid,omitempty"`
	Tm      string `protobuf:"bytes,35,opt,name=tm,proto3" json:"tm,omitempty"`
}

func (x *EventComment) Reset() {
	*x = EventComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zwiftpower_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventComment) ProtoMessage() {}

func (x *EventComment) ProtoReflect() protoreflect.Message {
	mi := &file_zwiftpower_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventComment.ProtoReflect.Descriptor instead.
func (*EventComment) Descriptor() ([]byte, []int) {
	return file_zwiftpower_proto_rawDescGZIP(), []int{3}
}

func (x *EventComment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventComment) GetFriend() int32 {
	if x != nil {
		return x.Friend
	}
	return 0
}

func (x *EventComment) GetFtp() string {
	if x != nil {
		return x.Ftp
	}
	return ""
}

func (x *EventComment) GetZwid() int32 {
	if x != nil {
		return x.Zwid
	}
	return 0
}

func (x *EventComment) GetS() string {
	if x != nil {
		return x.S
	}
	return ""
}

func (x *EventComment) GetPt() string {
	if x != nil {
		return x.Pt
	}
	return ""
}

func (x *EventComment) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *EventComment) GetTopen() string {
	if x != nil {
		return x.Topen
	}
	return ""
}

func (x *EventComment) GetTname() string {
	if x != nil {
		return x.Tname
	}
	return ""
}

func (x *EventComment) GetTc() string {
	if x != nil {
		return x.Tc
	}
	return ""
}

func (x *EventComment) GetTbc() string {
	if x != nil {
		return x.Tbc
	}
	return ""
}

func (x *EventComment) GetTbd() string {
	if x != nil {
		return x.Tbd
	}
	return ""
}

func (x *EventComment) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

func (x *EventComment) GetW() string {
	if x != nil {
		return x.W
	}
	return ""
}

func (x *EventComment) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *EventComment) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *EventComment) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *EventComment) GetZada() int32 {
	if x != nil {
		return x.Zada
	}
	return 0
}

func (x *EventComment) GetEvents() string {
	if x != nil {
		return x.Events
	}
	return ""
}

func (x *EventComment) GetDiv() int32 {
	if x != nil {
		return x.Div
	}
	return 0
}

func (x *EventComment) GetDivw() int32 {
	if x != nil {
		return x.Divw
	}
	return 0
}

func (x *EventComment) GetRank() string {
	if x != nil {
		return x.Rank
	}
	return ""
}

func (x *EventComment) GetSkill() int32 {
	if x != nil {
		return x.Skill
	}
	return 0
}

func (x *EventComment) GetSkillRace() int32 {
	if x != nil {
		return x.SkillRace
	}
	return 0
}

func (x *EventComment) GetSkillSeg() int32 {
	if x != nil {
		return x.SkillSeg
	}
	return 0
}

func (x *EventComment) GetSkillPower() int32 {
	if x != nil {
		return x.SkillPower
	}
	return 0
}

func (x *EventComment) GetSkillPos() int32 {
	if x != nil {
		return x.SkillPos
	}
	return 0
}

func (x *EventComment) GetReg() int32 {
	if x != nil {
		return x.Reg
	}
	return 0
}

func (x *EventComment) GetEff() string {
	if x != nil {
		return x.Eff
	}
	return ""
}

func (x *EventComment) GetFl() string {
	if x != nil {
		return x.Fl
	}
	return ""
}

func (x *EventComment) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EventComment) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *EventComment) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *EventComment) GetFid() string {
	if x != nil {
		return x.Fid
	}
	return ""
}

func (x *EventComment) GetTm() string {
	if x != nil {
		return x.Tm
	}
	return ""
}

type RaceHistoryFuture struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DT_RowId string   `protobuf:"bytes,1,opt,name=DT_RowId,json=DTRowId,proto3" json:"DT_RowId,omitempty"`
	Friends  int32    `protobuf:"varint,2,opt,name=friends,proto3" json:"friends,omitempty"`
	Tent     int32    `protobuf:"varint,3,opt,name=tent,proto3" json:"tent,omitempty"`
	FList    *any.Any `protobuf:"bytes,4,opt,name=f_list,json=fList,proto3" json:"f_list,omitempty"`
	TentList *any.Any `protobuf:"bytes,5,opt,name=tent_list,json=tentList,proto3" json:"tent_list,omitempty"`
	Km       int32    `protobuf:"varint,6,opt,name=km,proto3" json:"km,omitempty"`
	Tm       int32    `protobuf:"varint,7,opt,name=tm,proto3" json:"tm,omitempty"`
	R        string   `protobuf:"bytes,8,opt,name=r,proto3" json:"r,omitempty"`
	T        string   `protobuf:"bytes,9,opt,name=t,proto3" json:"t,omitempty"`
	Zid      string   `protobuf:"bytes,10,opt,name=zid,proto3" json:"zid,omitempty"`
	Rid      string   `protobuf:"bytes,11,opt,name=rid,proto3" json:"rid,omitempty"`
	Spi      string   `protobuf:"bytes,12,opt,name=spi,proto3" json:"spi,omitempty"`
	Spl      string   `protobuf:"bytes,13,opt,name=spl,proto3" json:"spl,omitempty"`
	F        int32    `protobuf:"varint,14,opt,name=f,proto3" json:"f,omitempty"`
	Zcl      int32    `protobuf:"varint,15,opt,name=zcl,proto3" json:"zcl,omitempty"`
	Rt       string   `protobuf:"bytes,16,opt,name=rt,proto3" json:"rt,omitempty"`
	Layout   string   `protobuf:"bytes,17,opt,name=layout,proto3" json:"layout,omitempty"`
	LayoutW  string   `protobuf:"bytes,18,opt,name=layout_w,json=layoutW,proto3" json:"layout_w,omitempty"`
	Rk       int32    `protobuf:"varint,19,opt,name=rk,proto3" json:"rk,omitempty"`
	Laps     string   `protobuf:"bytes,20,opt,name=laps,proto3" json:"laps,omitempty"`
	Cats     string   `protobuf:"bytes,21,opt,name=cats,proto3" json:"cats,omitempty"`
	Signups  string   `protobuf:"bytes,22,opt,name=signups,proto3" json:"signups,omitempty"`
	Stag     int32    `protobuf:"varint,23,opt,name=stag,proto3" json:"stag,omitempty"`
	W        string   `protobuf:"bytes,24,opt,name=w,proto3" json:"w,omitempty"`
	Dur      string   `protobuf:"bytes,25,opt,name=dur,proto3" json:"dur,omitempty"`
	Dir      int32    `protobuf:"varint,26,opt,name=dir,proto3" json:"dir,omitempty"`
	FT       string   `protobuf:"bytes,27,opt,name=f_t,json=fT,proto3" json:"f_t,omitempty"`
	FKm      string   `protobuf:"bytes,28,opt,name=f_km,json=fKm,proto3" json:"f_km,omitempty"`
	FTime    string   `protobuf:"bytes,29,opt,name=f_time,json=fTime,proto3" json:"f_time,omitempty"`
	FDay     string   `protobuf:"bytes,30,opt,name=f_day,json=fDay,proto3" json:"f_day,omitempty"`
	FW       string   `protobuf:"bytes,31,opt,name=f_w,json=fW,proto3" json:"f_w,omitempty"`
	FRu      string   `protobuf:"bytes,32,opt,name=f_ru,json=fRu,proto3" json:"f_ru,omitempty"`
	FR       string   `protobuf:"bytes,33,opt,name=f_r,json=fR,proto3" json:"f_r,omitempty"`
	Rtype    string   `protobuf:"bytes,34,opt,name=rtype,proto3" json:"rtype,omitempty"`
	Eid      int32    `protobuf:"varint,35,opt,name=eid,proto3" json:"eid,omitempty"`
	Rules    string   `protobuf:"bytes,36,opt,name=rules,proto3" json:"rules,omitempty"`
	Crules   string   `protobuf:"bytes,37,opt,name=crules,proto3" json:"crules,omitempty"`
	Cul      int32    `protobuf:"varint,38,opt,name=cul,proto3" json:"cul,omitempty"`
	Fin      string   `protobuf:"bytes,39,opt,name=fin,proto3" json:"fin,omitempty"`
	Ctype    int32    `protobuf:"varint,40,opt,name=ctype,proto3" json:"ctype,omitempty"`
	Tags     string   `protobuf:"bytes,41,opt,name=tags,proto3" json:"tags,omitempty"`
	Recur    string   `protobuf:"bytes,42,opt,name=recur,proto3" json:"recur,omitempty"`
	Lbl      int32    `protobuf:"varint,43,opt,name=lbl,proto3" json:"lbl,omitempty"`
}

func (x *RaceHistoryFuture) Reset() {
	*x = RaceHistoryFuture{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zwiftpower_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaceHistoryFuture) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaceHistoryFuture) ProtoMessage() {}

func (x *RaceHistoryFuture) ProtoReflect() protoreflect.Message {
	mi := &file_zwiftpower_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaceHistoryFuture.ProtoReflect.Descriptor instead.
func (*RaceHistoryFuture) Descriptor() ([]byte, []int) {
	return file_zwiftpower_proto_rawDescGZIP(), []int{4}
}

func (x *RaceHistoryFuture) GetDT_RowId() string {
	if x != nil {
		return x.DT_RowId
	}
	return ""
}

func (x *RaceHistoryFuture) GetFriends() int32 {
	if x != nil {
		return x.Friends
	}
	return 0
}

func (x *RaceHistoryFuture) GetTent() int32 {
	if x != nil {
		return x.Tent
	}
	return 0
}

func (x *RaceHistoryFuture) GetFList() *any.Any {
	if x != nil {
		return x.FList
	}
	return nil
}

func (x *RaceHistoryFuture) GetTentList() *any.Any {
	if x != nil {
		return x.TentList
	}
	return nil
}

func (x *RaceHistoryFuture) GetKm() int32 {
	if x != nil {
		return x.Km
	}
	return 0
}

func (x *RaceHistoryFuture) GetTm() int32 {
	if x != nil {
		return x.Tm
	}
	return 0
}

func (x *RaceHistoryFuture) GetR() string {
	if x != nil {
		return x.R
	}
	return ""
}

func (x *RaceHistoryFuture) GetT() string {
	if x != nil {
		return x.T
	}
	return ""
}

func (x *RaceHistoryFuture) GetZid() string {
	if x != nil {
		return x.Zid
	}
	return ""
}

func (x *RaceHistoryFuture) GetRid() string {
	if x != nil {
		return x.Rid
	}
	return ""
}

func (x *RaceHistoryFuture) GetSpi() string {
	if x != nil {
		return x.Spi
	}
	return ""
}

func (x *RaceHistoryFuture) GetSpl() string {
	if x != nil {
		return x.Spl
	}
	return ""
}

func (x *RaceHistoryFuture) GetF() int32 {
	if x != nil {
		return x.F
	}
	return 0
}

func (x *RaceHistoryFuture) GetZcl() int32 {
	if x != nil {
		return x.Zcl
	}
	return 0
}

func (x *RaceHistoryFuture) GetRt() string {
	if x != nil {
		return x.Rt
	}
	return ""
}

func (x *RaceHistoryFuture) GetLayout() string {
	if x != nil {
		return x.Layout
	}
	return ""
}

func (x *RaceHistoryFuture) GetLayoutW() string {
	if x != nil {
		return x.LayoutW
	}
	return ""
}

func (x *RaceHistoryFuture) GetRk() int32 {
	if x != nil {
		return x.Rk
	}
	return 0
}

func (x *RaceHistoryFuture) GetLaps() string {
	if x != nil {
		return x.Laps
	}
	return ""
}

func (x *RaceHistoryFuture) GetCats() string {
	if x != nil {
		return x.Cats
	}
	return ""
}

func (x *RaceHistoryFuture) GetSignups() string {
	if x != nil {
		return x.Signups
	}
	return ""
}

func (x *RaceHistoryFuture) GetStag() int32 {
	if x != nil {
		return x.Stag
	}
	return 0
}

func (x *RaceHistoryFuture) GetW() string {
	if x != nil {
		return x.W
	}
	return ""
}

func (x *RaceHistoryFuture) GetDur() string {
	if x != nil {
		return x.Dur
	}
	return ""
}

func (x *RaceHistoryFuture) GetDir() int32 {
	if x != nil {
		return x.Dir
	}
	return 0
}

func (x *RaceHistoryFuture) GetFT() string {
	if x != nil {
		return x.FT
	}
	return ""
}

func (x *RaceHistoryFuture) GetFKm() string {
	if x != nil {
		return x.FKm
	}
	return ""
}

func (x *RaceHistoryFuture) GetFTime() string {
	if x != nil {
		return x.FTime
	}
	return ""
}

func (x *RaceHistoryFuture) GetFDay() string {
	if x != nil {
		return x.FDay
	}
	return ""
}

func (x *RaceHistoryFuture) GetFW() string {
	if x != nil {
		return x.FW
	}
	return ""
}

func (x *RaceHistoryFuture) GetFRu() string {
	if x != nil {
		return x.FRu
	}
	return ""
}

func (x *RaceHistoryFuture) GetFR() string {
	if x != nil {
		return x.FR
	}
	return ""
}

func (x *RaceHistoryFuture) GetRtype() string {
	if x != nil {
		return x.Rtype
	}
	return ""
}

func (x *RaceHistoryFuture) GetEid() int32 {
	if x != nil {
		return x.Eid
	}
	return 0
}

func (x *RaceHistoryFuture) GetRules() string {
	if x != nil {
		return x.Rules
	}
	return ""
}

func (x *RaceHistoryFuture) GetCrules() string {
	if x != nil {
		return x.Crules
	}
	return ""
}

func (x *RaceHistoryFuture) GetCul() int32 {
	if x != nil {
		return x.Cul
	}
	return 0
}

func (x *RaceHistoryFuture) GetFin() string {
	if x != nil {
		return x.Fin
	}
	return ""
}

func (x *RaceHistoryFuture) GetCtype() int32 {
	if x != nil {
		return x.Ctype
	}
	return 0
}

func (x *RaceHistoryFuture) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *RaceHistoryFuture) GetRecur() string {
	if x != nil {
		return x.Recur
	}
	return ""
}

func (x *RaceHistoryFuture) GetLbl() int32 {
	if x != nil {
		return x.Lbl
	}
	return 0
}

type ListTeamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListTeamsRequest) Reset() {
	*x = ListTeamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zwiftpower_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTeamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeamsRequest) ProtoMessage() {}

func (x *ListTeamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zwiftpower_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeamsRequest.ProtoReflect.Descriptor instead.
func (*ListTeamsRequest) Descriptor() ([]byte, []int) {
	return file_zwiftpower_proto_rawDescGZIP(), []int{5}
}

type ListTeamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teams []*Team `protobuf:"bytes,1,rep,name=teams,json=data,proto3" json:"teams,omitempty"`
}

func (x *ListTeamsResponse) Reset() {
	*x = ListTeamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zwiftpower_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTeamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeamsResponse) ProtoMessage() {}

func (x *ListTeamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zwiftpower_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeamsResponse.ProtoReflect.Descriptor instead.
func (*ListTeamsResponse) Descriptor() ([]byte, []int) {
	return file_zwiftpower_proto_rawDescGZIP(), []int{6}
}

func (x *ListTeamsResponse) GetTeams() []*Team {
	if x != nil {
		return x.Teams
	}
	return nil
}

type Team struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Team name
	Tln    string `protobuf:"bytes,1,opt,name=tln,proto3" json:"tln,omitempty"`
	Tag    string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	// Number of riders on the team
	Riders string `protobuf:"bytes,4,opt,name=riders,proto3" json:"riders,omitempty"`
	Races  string `protobuf:"bytes,5,opt,name=races,proto3" json:"races,omitempty"`
	// Primary color in hex
	Color string `protobuf:"bytes,6,opt,name=color,proto3" json:"color,omitempty"`
	// Contact link
	Contact string `protobuf:"bytes,7,opt,name=contact,proto3" json:"contact,omitempty"`
	// Team owner's name
	Name string `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	// An int32 when set, otherwise an empty string
	Aid     *_struct.Value `protobuf:"bytes,9,opt,name=aid,proto3" json:"aid,omitempty"`
	Tid     string         `protobuf:"bytes,10,opt,name=tid,proto3" json:"tid,omitempty"`
	Tname   string         `protobuf:"bytes,11,opt,name=tname,proto3" json:"tname,omitempty"`
	Tc      string         `protobuf:"bytes,12,opt,name=tc,proto3" json:"tc,omitempty"`
	Tbc     string         `protobuf:"bytes,13,opt,name=tbc,proto3" json:"tbc,omitempty"`
	Tbd     string         `protobuf:"bytes,14,opt,name=tbd,proto3" json:"tbd,omitempty"`
	Flag    string         `protobuf:"bytes,15,opt,name=flag,proto3" json:"flag,omitempty"`
	Primary int32          `protobuf:"varint,16,opt,name=primary,proto3" json:"primary,omitempty"`
}

func (x *Team) Reset() {
	*x = Team{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zwiftpower_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Team) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Team) ProtoMessage() {}

func (x *Team) ProtoReflect() protoreflect.Message {
	mi := &file_zwiftpower_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Team.ProtoReflect.Descriptor instead.
func (*Team) Descriptor() ([]byte, []int) {
	return file_zwiftpower_proto_rawDescGZIP(), []int{7}
}

func (x *Team) GetTln() string {
	if x != nil {
		return x.Tln
	}
	return ""
}

func (x *Team) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *Team) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *Team) GetRiders() string {
	if x != nil {
		return x.Riders
	}
	return ""
}

func (x *Team) GetRaces() string {
	if x != nil {
		return x.Races
	}
	return ""
}

func (x *Team) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Team) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *Team) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Team) GetAid() *_struct.Value {
	if x != nil {
		return x.Aid
	}
	return nil
}

func (x *Team) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *Team) GetTname() string {
	if x != nil {
		return x.Tname
	}
	return ""
}

func (x *Team) GetTc() string {
	if x != nil {
		return x.Tc
	}
	return ""
}

func (x *Team) GetTbc() string {
	if x != nil {
		return x.Tbc
	}
	return ""
}

func (x *Team) GetTbd() string {
	if x != nil {
		return x.Tbd
	}
	return ""
}

func (x *Team) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

func (x *Team) GetPrimary() int32 {
	if x != nil {
		return x.Primary
	}
	return 0
}

type ListLeaguesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListLeaguesRequest) Reset() {
	*x = ListLeaguesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zwiftpower_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLeaguesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLeaguesRequest) ProtoMessage() {}

func (x *ListLeaguesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zwiftpower_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLeaguesRequest.ProtoReflect.Descriptor instead.
func (*ListLeaguesRequest) Descriptor() ([]byte, []int) {
	return file_zwiftpower_proto_rawDescGZIP(), []int{8}
}

type ListLeaguesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Leagues []*League `protobuf:"bytes,1,rep,name=leagues,json=data,proto3" json:"leagues,omitempty"`
}

func (x *ListLeaguesResponse) Reset() {
	*x = ListLeaguesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zwiftpower_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLeaguesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLeaguesResponse) ProtoMessage() {}

func (x *ListLeaguesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zwiftpower_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLeaguesResponse.ProtoReflect.Descriptor instead.
func (*ListLeaguesResponse) Descriptor() ([]byte, []int) {
	return file_zwiftpower_proto_rawDescGZIP(), []int{9}
}

func (x *ListLeaguesResponse) GetLeagues() []*League {
	if x != nil {
		return x.Leagues
	}
	return nil
}

type League struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,json=league_name,proto3" json:"name,omitempty"`
	Id         string `protobuf:"bytes,2,opt,name=id,json=league_id,proto3" json:"id,omitempty"`
	Active     int32  `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	Info       string `protobuf:"bytes,4,opt,name=info,proto3" json:"info,omitempty"`
	Contact    string `protobuf:"bytes,5,opt,name=contact,proto3" json:"contact,omitempty"`
	Start      string `protobuf:"bytes,6,opt,name=start,proto3" json:"start,omitempty"`
	Cats       string `protobuf:"bytes,7,opt,name=cats,proto3" json:"cats,omitempty"`
	CatsNames  string `protobuf:"bytes,8,opt,name=cats_names,json=catsNames,proto3" json:"cats_names,omitempty"`
	End        string `protobuf:"bytes,9,opt,name=end,proto3" json:"end,omitempty"`
	Lidc       string `protobuf:"bytes,10,opt,name=lidc,proto3" json:"lidc,omitempty"`
	Lidbd      string `protobuf:"bytes,11,opt,name=lidbd,proto3" json:"lidbd,omitempty"`
	Lidbc      string `protobuf:"bytes,12,opt,name=lidbc,proto3" json:"lidbc,omitempty"`
	Races      string `protobuf:"bytes,13,opt,name=races,proto3" json:"races,omitempty"`
	Efforts    string `protobuf:"bytes,14,opt,name=efforts,proto3" json:"efforts,omitempty"`
	Image      string `protobuf:"bytes,15,opt,name=image,proto3" json:"image,omitempty"`
	LraceId    string `protobuf:"bytes,16,opt,name=lrace_id,json=lraceId,proto3" json:"lrace_id,omitempty"`
	RaceId     string `protobuf:"bytes,17,opt,name=race_id,json=raceId,proto3" json:"race_id,omitempty"`
	Ridc       string `protobuf:"bytes,18,opt,name=ridc,proto3" json:"ridc,omitempty"`
	Ridbd      string `protobuf:"bytes,19,opt,name=ridbd,proto3" json:"ridbd,omitempty"`
	Ridbc      string `protobuf:"bytes,20,opt,name=ridbc,proto3" json:"ridbc,omitempty"`
	LraceTitle string `protobuf:"bytes,21,opt,name=lrace_title,json=lraceTitle,proto3" json:"lrace_title,omitempty"`
}

func (x *League) Reset() {
	*x = League{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zwiftpower_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *League) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*League) ProtoMessage() {}

func (x *League) ProtoReflect() protoreflect.Message {
	mi := &file_zwiftpower_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use League.ProtoReflect.Descriptor instead.
func (*League) Descriptor() ([]byte, []int) {
	return file_zwiftpower_proto_rawDescGZIP(), []int{10}
}

func (x *League) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *League) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *League) GetActive() int32 {
	if x != nil {
		return x.Active
	}
	return 0
}

func (x *League) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *League) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *League) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *League) GetCats() string {
	if x != nil {
		return x.Cats
	}
	return ""
}

func (x *League) GetCatsNames() string {
	if x != nil {
		return x.CatsNames
	}
	return ""
}

func (x *League) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *League) GetLidc() string {
	if x != nil {
		return x.Lidc
	}
	return ""
}

func (x *League) GetLidbd() string {
	if x != nil {
		return x.Lidbd
	}
	return ""
}

func (x *League) GetLidbc() string {
	if x != nil {
		return x.Lidbc
	}
	return ""
}

func (x *League) GetRaces() string {
	if x != nil {
		return x.Races
	}
	return ""
}

func (x *League) GetEfforts() string {
	if x != nil {
		return x.Efforts
	}
	return ""
}

func (x *League) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *League) GetLraceId() string {
	if x != nil {
		return x.LraceId
	}
	return ""
}

func (x *League) GetRaceId() string {
	if x != nil {
		return x.RaceId
	}
	return ""
}

func (x *League) GetRidc() string {
	if x != nil {
		return x.Ridc
	}
	return ""
}

func (x *League) GetRidbd() string {
	if x != nil {
		return x.Ridbd
	}
	return ""
}

func (x *League) GetRidbc() string {
	if x != nil {
		return x.Ridbc
	}
	return ""
}

func (x *League) GetLraceTitle() string {
	if x != nil {
		return x.LraceTitle
	}
	return ""
}

type GetTeamRidersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ZP_VARS.team_id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTeamRidersRequest) Reset() {
	*x = GetTeamRidersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zwiftpower_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamRidersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamRidersRequest) ProtoMessage() {}

func (x *GetTeamRidersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zwiftpower_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamRidersRequest.ProtoReflect.Descriptor instead.
func (*GetTeamRidersRequest) Descriptor() ([]byte, []int) {
	return file_zwiftpower_proto_rawDescGZIP(), []int{11}
}

func (x *GetTeamRidersRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Rider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Rider) Reset() {
	*x = Rider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zwiftpower_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rider) ProtoMessage() {}

func (x *Rider) ProtoReflect() protoreflect.Message {
	mi := &file_zwiftpower_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rider.ProtoReflect.Descriptor instead.
func (*Rider) Descriptor() ([]byte, []int) {
	return file_zwiftpower_proto_rawDescGZIP(), []int{12}
}

func (x *Rider) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetTeamRidersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Riders []*Rider `protobuf:"bytes,1,rep,name=riders,json=data,proto3" json:"riders,omitempty"`
}

func (x *GetTeamRidersResponse) Reset() {
	*x = GetTeamRidersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zwiftpower_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamRidersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamRidersResponse) ProtoMessage() {}

func (x *GetTeamRidersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zwiftpower_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamRidersResponse.ProtoReflect.Descriptor instead.
func (*GetTeamRidersResponse) Descriptor() ([]byte, []int) {
	return file_zwiftpower_proto_rawDescGZIP(), []int{13}
}

func (x *GetTeamRidersResponse) GetRiders() []*Rider {
	if x != nil {
		return x.Riders
	}
	return nil
}

type ListActivitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListActivitiesRequest) Reset() {
	*x = ListActivitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zwiftpower_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListActivitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActivitiesRequest) ProtoMessage() {}

func (x *ListActivitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zwiftpower_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActivitiesRequest.ProtoReflect.Descriptor instead.
func (*ListActivitiesRequest) Descriptor() ([]byte, []int) {
	return file_zwiftpower_proto_rawDescGZIP(), []int{14}
}

type ListActivitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Activities []*Activity `protobuf:"bytes,1,rep,name=activities,json=data,proto3" json:"activities,omitempty"`
}

func (x *ListActivitiesResponse) Reset() {
	*x = ListActivitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zwiftpower_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListActivitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActivitiesResponse) ProtoMessage() {}

func (x *ListActivitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zwiftpower_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActivitiesResponse.ProtoReflect.Descriptor instead.
func (*ListActivitiesResponse) Descriptor() ([]byte, []int) {
	return file_zwiftpower_proto_rawDescGZIP(), []int{15}
}

func (x *ListActivitiesResponse) GetActivities() []*Activity {
	if x != nil {
		return x.Activities
	}
	return nil
}

type Activity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date  int32  `protobuf:"varint,1,opt,name=date,proto3" json:"date,omitempty"`
	Zaid  string `protobuf:"bytes,2,opt,name=zaid,proto3" json:"zaid,omitempty"`
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Zid   string `protobuf:"bytes,4,opt,name=zid,proto3" json:"zid,omitempty"`
	// google.protobuf.Any elapsed = 5;
	Distance int32  `protobuf:"varint,6,opt,name=distance,proto3" json:"distance,omitempty"`
	WorldId  string `protobuf:"bytes,7,opt,name=world_id,json=worldId,proto3" json:"world_id,omitempty"`
	Sport    string `protobuf:"bytes,8,opt,name=sport,proto3" json:"sport,omitempty"`
	// Network location of the fit file
	Fit      string `protobuf:"bytes,9,opt,name=fit,proto3" json:"fit,omitempty"`
	Aid      string `protobuf:"bytes,10,opt,name=aid,proto3" json:"aid,omitempty"`
	AvgSpeed int32  `protobuf:"varint,11,opt,name=avg_speed,json=avgSpeed,proto3" json:"avg_speed,omitempty"`
	// google.protobuf.Any avg_hr = 12;
	// google.protobuf.Any max_hr = 13;
	// google.protobuf.Any avg_cadence = 14;
	Calories int32 `protobuf:"varint,15,opt,name=calories,proto3" json:"calories,omitempty"`
	// google.protobuf.Any avg_power = 16;
	Elevation int32 `protobuf:"varint,17,opt,name=elevation,proto3" json:"elevation,omitempty"`
	Zeid      int32 `protobuf:"varint,18,opt,name=zeid,proto3" json:"zeid,omitempty"`
}

func (x *Activity) Reset() {
	*x = Activity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zwiftpower_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity) ProtoMessage() {}

func (x *Activity) ProtoReflect() protoreflect.Message {
	mi := &file_zwiftpower_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity.ProtoReflect.Descriptor instead.
func (*Activity) Descriptor() ([]byte, []int) {
	return file_zwiftpower_proto_rawDescGZIP(), []int{16}
}

func (x *Activity) GetDate() int32 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *Activity) GetZaid() string {
	if x != nil {
		return x.Zaid
	}
	return ""
}

func (x *Activity) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Activity) GetZid() string {
	if x != nil {
		return x.Zid
	}
	return ""
}

func (x *Activity) GetDistance() int32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *Activity) GetWorldId() string {
	if x != nil {
		return x.WorldId
	}
	return ""
}

func (x *Activity) GetSport() string {
	if x != nil {
		return x.Sport
	}
	return ""
}

func (x *Activity) GetFit() string {
	if x != nil {
		return x.Fit
	}
	return ""
}

func (x *Activity) GetAid() string {
	if x != nil {
		return x.Aid
	}
	return ""
}

func (x *Activity) GetAvgSpeed() int32 {
	if x != nil {
		return x.AvgSpeed
	}
	return 0
}

func (x *Activity) GetCalories() int32 {
	if x != nil {
		return x.Calories
	}
	return 0
}

func (x *Activity) GetElevation() int32 {
	if x != nil {
		return x.Elevation
	}
	return 0
}

func (x *Activity) GetZeid() int32 {
	if x != nil {
		return x.Zeid
	}
	return 0
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zid  string `protobuf:"bytes,1,opt,name=zid,proto3" json:"zid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,json=t,proto3" json:"name,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zwiftpower_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_zwiftpower_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_zwiftpower_proto_rawDescGZIP(), []int{17}
}

func (x *Event) GetZid() string {
	if x != nil {
		return x.Zid
	}
	return ""
}

func (x *Event) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListEventsRequest) Reset() {
	*x = ListEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zwiftpower_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsRequest) ProtoMessage() {}

func (x *ListEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zwiftpower_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsRequest.ProtoReflect.Descriptor instead.
func (*ListEventsRequest) Descriptor() ([]byte, []int) {
	return file_zwiftpower_proto_rawDescGZIP(), []int{18}
}

type ListEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*Event `protobuf:"bytes,1,rep,name=events,json=data,proto3" json:"events,omitempty"`
}

func (x *ListEventsResponse) Reset() {
	*x = ListEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zwiftpower_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsResponse) ProtoMessage() {}

func (x *ListEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zwiftpower_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsResponse.ProtoReflect.Descriptor instead.
func (*ListEventsResponse) Descriptor() ([]byte, []int) {
	return file_zwiftpower_proto_rawDescGZIP(), []int{19}
}

func (x *ListEventsResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

var File_zwiftpower_proto protoreflect.FileDescriptor

var file_zwiftpower_proto_rawDesc = []byte{
	0x0a, 0x10, 0x7a, 0x77, 0x69, 0x66, 0x74, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2a, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x7a, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x7a, 0x69, 0x64, 0x22, 0x3c, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdb, 0x06, 0x0a, 0x0c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x44, 0x54, 0x5f, 0x52, 0x6f, 0x77,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x44, 0x54, 0x52, 0x6f, 0x77, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x74, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x66, 0x74, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x70, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x7a, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x7a, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x26, 0x0a,
	0x0f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x61, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x43, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x77, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x77, 0x69, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72,
	0x65, 0x73, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x6d, 0x61, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x70, 0x65, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x65, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x63, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x74, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x62, 0x63, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x62, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x62, 0x64, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x62, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x72, 0x6d, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x68, 0x72, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x70, 0x6f, 0x73,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x50,
	0x6f, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x61, 0x64, 0x61, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x7a, 0x61, 0x64, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x69, 0x73, 0x5f, 0x67, 0x75, 0x65, 0x73, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x69, 0x73, 0x47, 0x75, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x6e, 0x61, 0x6c,
	0x74, 0x79, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x67, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x72, 0x65, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x6c, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x66, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x33, 0x36, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x73, 0x33, 0x36, 0x12, 0x28, 0x0a, 0x04, 0x6d, 0x73, 0x65, 0x63, 0x18, 0x21, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x6d, 0x73, 0x65, 0x63, 0x12,
	0x2a, 0x0a, 0x05, 0x77, 0x61, 0x74, 0x74, 0x73, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x77, 0x61, 0x74, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x03, 0x77,
	0x6b, 0x67, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x03,
	0x77, 0x6b, 0x67, 0x22, 0xdc, 0x05, 0x0a, 0x0c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x66, 0x74, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66,
	0x74, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x77, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x7a, 0x77, 0x69, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x01, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x70, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x65, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x74, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x62, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x74, 0x62, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x62, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x74, 0x62, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x0c, 0x0a, 0x01, 0x77, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x77, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x61,
	0x64, 0x61, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x7a, 0x61, 0x64, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x76, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x69, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x76, 0x77,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x64, 0x69, 0x76, 0x77, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x61, 0x6e, 0x6b, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f,
	0x72, 0x61, 0x63, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x6b, 0x69, 0x6c,
	0x6c, 0x52, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x73,
	0x65, 0x67, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x53,
	0x65, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x6f, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x67, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72,
	0x65, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x66, 0x66, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x65, 0x66, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x6c, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x66, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66,
	0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6d, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x74, 0x6d, 0x22, 0x8c, 0x07, 0x0a, 0x11, 0x52, 0x61, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x44, 0x54, 0x5f, 0x52,
	0x6f, 0x77, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x44, 0x54, 0x52, 0x6f,
	0x77, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x2b, 0x0a, 0x06, 0x66, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x31,
	0x0a, 0x09, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6b, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x6b,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74,
	0x6d, 0x12, 0x0c, 0x0a, 0x01, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x72, 0x12,
	0x0c, 0x0a, 0x01, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x7a, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x7a, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x70, 0x69, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x73, 0x70, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x70, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x73, 0x70, 0x6c, 0x12, 0x0c, 0x0a, 0x01, 0x66, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x01, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x7a, 0x63, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x7a, 0x63, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x5f, 0x77, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x57, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x6b, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x70, 0x73,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x70, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x61, 0x74, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x61, 0x74, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74,
	0x61, 0x67, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x74, 0x61, 0x67, 0x12, 0x0c,
	0x0a, 0x01, 0x77, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x77, 0x12, 0x10, 0x0a, 0x03,
	0x64, 0x75, 0x72, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x75, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x69, 0x72,
	0x12, 0x0f, 0x0a, 0x03, 0x66, 0x5f, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x66,
	0x54, 0x12, 0x11, 0x0a, 0x04, 0x66, 0x5f, 0x6b, 0x6d, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x66, 0x4b, 0x6d, 0x12, 0x15, 0x0a, 0x06, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x66,
	0x5f, 0x64, 0x61, 0x79, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x44, 0x61, 0x79,
	0x12, 0x0f, 0x0a, 0x03, 0x66, 0x5f, 0x77, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x66,
	0x57, 0x12, 0x11, 0x0a, 0x04, 0x66, 0x5f, 0x72, 0x75, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x66, 0x52, 0x75, 0x12, 0x0f, 0x0a, 0x03, 0x66, 0x5f, 0x72, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x66, 0x52, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x74, 0x79, 0x70, 0x65, 0x18, 0x22,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x69, 0x64, 0x18, 0x23, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x75,
	0x6c, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x25, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x75, 0x6c, 0x18, 0x26, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x75, 0x6c, 0x12, 0x10, 0x0a,
	0x03, 0x66, 0x69, 0x6e, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x69, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x74, 0x79, 0x70, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x29, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x63,
	0x75, 0x72, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x63, 0x75, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x6c, 0x62, 0x6c, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6c, 0x62,
	0x6c, 0x22, 0x12, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2f, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x05, 0x74, 0x65,
	0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x65, 0x61, 0x6d,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe9, 0x02, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x6c, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x6c,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x74, 0x61, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x61, 0x63, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28,
	0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x74, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x63,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x62, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74,
	0x62, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x62, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x74, 0x62, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x22, 0x14, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x35, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74,
	0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1e, 0x0a, 0x07, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xf6, 0x03, 0x0a, 0x06, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x61, 0x74, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x61, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x61, 0x74, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x61, 0x74, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x69, 0x64, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x64,
	0x63, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x64, 0x62, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x69, 0x64, 0x62, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x64, 0x62, 0x63,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x64, 0x62, 0x63, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x61, 0x63, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x61,
	0x63, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x66, 0x66, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x66, 0x66, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x69, 0x64, 0x63, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x69, 0x64, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x69, 0x64, 0x62, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x69, 0x64, 0x62,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x69, 0x64, 0x62, 0x63, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x72, 0x69, 0x64, 0x62, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x72, 0x61, 0x63, 0x65,
	0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x72,
	0x61, 0x63, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x61, 0x6d, 0x52, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x1b, 0x0a, 0x05, 0x52, 0x69, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x35, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x06, 0x72, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x72, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x17, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3d, 0x0a,
	0x16, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb6, 0x02, 0x0a,
	0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x7a, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x61, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x7a, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x7a, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76,
	0x67, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61,
	0x76, 0x67, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x65, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x7a, 0x65, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x7a, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x7a, 0x69, 0x64,
	0x12, 0x0f, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01,
	0x74, 0x22, 0x13, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x32, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x06,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x6f, 0x6e, 0x61, 0x68, 0x67, 0x65,
	0x6f, 0x72, 0x67, 0x65, 0x2f, 0x7a, 0x77, 0x69, 0x66, 0x74, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2d,
	0x67, 0x6f, 0x3b, 0x7a, 0x77, 0x69, 0x66, 0x74, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_zwiftpower_proto_rawDescOnce sync.Once
	file_zwiftpower_proto_rawDescData = file_zwiftpower_proto_rawDesc
)

func file_zwiftpower_proto_rawDescGZIP() []byte {
	file_zwiftpower_proto_rawDescOnce.Do(func() {
		file_zwiftpower_proto_rawDescData = protoimpl.X.CompressGZIP(file_zwiftpower_proto_rawDescData)
	})
	return file_zwiftpower_proto_rawDescData
}

var file_zwiftpower_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_zwiftpower_proto_goTypes = []interface{}{
	(*GetEventSprintsRequest)(nil),  // 0: GetEventSprintsRequest
	(*GetEventSprintsResponse)(nil), // 1: GetEventSprintsResponse
	(*EventSprints)(nil),            // 2: EventSprints
	(*EventComment)(nil),            // 3: EventComment
	(*RaceHistoryFuture)(nil),       // 4: RaceHistoryFuture
	(*ListTeamsRequest)(nil),        // 5: ListTeamsRequest
	(*ListTeamsResponse)(nil),       // 6: ListTeamsResponse
	(*Team)(nil),                    // 7: Team
	(*ListLeaguesRequest)(nil),      // 8: ListLeaguesRequest
	(*ListLeaguesResponse)(nil),     // 9: ListLeaguesResponse
	(*League)(nil),                  // 10: League
	(*GetTeamRidersRequest)(nil),    // 11: GetTeamRidersRequest
	(*Rider)(nil),                   // 12: Rider
	(*GetTeamRidersResponse)(nil),   // 13: GetTeamRidersResponse
	(*ListActivitiesRequest)(nil),   // 14: ListActivitiesRequest
	(*ListActivitiesResponse)(nil),  // 15: ListActivitiesResponse
	(*Activity)(nil),                // 16: Activity
	(*Event)(nil),                   // 17: Event
	(*ListEventsRequest)(nil),       // 18: ListEventsRequest
	(*ListEventsResponse)(nil),      // 19: ListEventsResponse
	(*any.Any)(nil),                 // 20: google.protobuf.Any
	(*_struct.Value)(nil),           // 21: google.protobuf.Value
}
var file_zwiftpower_proto_depIdxs = []int32{
	2,  // 0: GetEventSprintsResponse.data:type_name -> EventSprints
	20, // 1: EventSprints.height:type_name -> google.protobuf.Any
	20, // 2: EventSprints.msec:type_name -> google.protobuf.Any
	20, // 3: EventSprints.watts:type_name -> google.protobuf.Any
	20, // 4: EventSprints.wkg:type_name -> google.protobuf.Any
	20, // 5: RaceHistoryFuture.f_list:type_name -> google.protobuf.Any
	20, // 6: RaceHistoryFuture.tent_list:type_name -> google.protobuf.Any
	7,  // 7: ListTeamsResponse.teams:type_name -> Team
	21, // 8: Team.aid:type_name -> google.protobuf.Value
	10, // 9: ListLeaguesResponse.leagues:type_name -> League
	12, // 10: GetTeamRidersResponse.riders:type_name -> Rider
	16, // 11: ListActivitiesResponse.activities:type_name -> Activity
	17, // 12: ListEventsResponse.events:type_name -> Event
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_zwiftpower_proto_init() }
func file_zwiftpower_proto_init() {
	if File_zwiftpower_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_zwiftpower_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventSprintsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zwiftpower_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventSprintsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zwiftpower_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSprints); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zwiftpower_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zwiftpower_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaceHistoryFuture); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zwiftpower_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTeamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zwiftpower_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTeamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zwiftpower_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Team); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zwiftpower_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLeaguesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zwiftpower_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLeaguesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zwiftpower_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*League); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zwiftpower_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamRidersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zwiftpower_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zwiftpower_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamRidersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zwiftpower_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListActivitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zwiftpower_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListActivitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zwiftpower_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Activity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zwiftpower_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zwiftpower_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zwiftpower_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zwiftpower_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_zwiftpower_proto_goTypes,
		DependencyIndexes: file_zwiftpower_proto_depIdxs,
		MessageInfos:      file_zwiftpower_proto_msgTypes,
	}.Build()
	File_zwiftpower_proto = out.File
	file_zwiftpower_proto_rawDesc = nil
	file_zwiftpower_proto_goTypes = nil
	file_zwiftpower_proto_depIdxs = nil
}
